# backend/Dockerfile.prod
FROM python:3.9-slim

# Environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV POETRY_VERSION=1.8.3
ENV DJANGO_SETTINGS_MODULE=core.settings

# Install system dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install "poetry==$POETRY_VERSION"

# Set working directory
WORKDIR /app

# Copy Poetry files
COPY pyproject.toml poetry.lock* ./

# Configure Poetry to not create virtual environments
RUN poetry config virtualenvs.create false

# Install dependencies without development packages
RUN poetry install --no-dev --no-interaction --no-ansi

# Copy project code
COPY . .

# Install Gunicorn
RUN pip install gunicorn

# Collect static files
RUN python manage.py collectstatic --noinput

# Run migrations
# Note: This should generally be done during deployment, not during build
# RUN python manage.py migrate

# Expose port
EXPOSE 8000

# Run gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "core.wsgi:application"] 